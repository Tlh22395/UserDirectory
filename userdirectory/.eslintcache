[{"/Users/user/Desktop/Homework/UserDirectory/userdirectory/src/index.js":"1","/Users/user/Desktop/Homework/UserDirectory/userdirectory/src/App.js":"2","/Users/user/Desktop/Homework/UserDirectory/userdirectory/src/components/Wrapper/index.js":"3","/Users/user/Desktop/Homework/UserDirectory/userdirectory/src/components/NavBar/index.js":"4","/Users/user/Desktop/Homework/UserDirectory/userdirectory/src/components/SearchForm/index.js":"5"},{"size":214,"mtime":1611940962000,"results":"6","hashOfConfig":"7"},{"size":416,"mtime":1611942178479,"results":"8","hashOfConfig":"7"},{"size":3489,"mtime":1611938646676,"results":"9","hashOfConfig":"7"},{"size":897,"mtime":1611938590678,"results":"10","hashOfConfig":"7"},{"size":466,"mtime":1611938651767,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"udhujm",{"filePath":"15","messages":"16","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"14"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"14"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/user/Desktop/Homework/UserDirectory/userdirectory/src/index.js",[],["26","27"],"/Users/user/Desktop/Homework/UserDirectory/userdirectory/src/App.js",["28","29"],"\nimport React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport \"./App.css\";\nimport Header from \"./components/NavBar/index\";\nimport Wrapper from \"./components/Wrapper/index\";\n\nfunction App() {\n  return (\n    <Router basename=\"/employee-directory\">\n      <div className=\"App\">\n        <Header />\n        <Wrapper />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;","/Users/user/Desktop/Homework/UserDirectory/userdirectory/src/components/Wrapper/index.js",["30"],"import React from \"react\";\nimport { createStyles, withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport axios from \"axios\";\nimport Form from \"../SearchForm/index\";\n\nconst styles = () =>\n  createStyles({\n    table: {\n      minWidth: \"85%\",\n    },\n  });\n\nclass Wrapper extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      users: [],\n      search: \"\",\n      sortDirection: 0,\n    };\n  }\n  componentDidMount() {\n    axios.get(\"https://randomuser.me/api/?results=25&nat=us\").then((res) => {\n      console.log(res.data);\n      this.setState({ users: res.data.results });\n    });\n  }\n\n  handleInputChange = (event) => {\n    // Getting the value and name of the input which triggered the change\n    let { name, value } = event.target;\n\n    // Updating the input's state\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  sortByName() {\n    if (this.state.sortDirection < 1) {\n      this.setState({\n        users: this.state.users.sort((a, b) =>\n          a.name.first > b.name.first ? 1 : -1\n        ),\n      });\n      this.setState({ sortDirection: 1 });\n    } else {\n      this.setState({\n        users: this.state.users.sort((a, b) =>\n          a.name.first < b.name.first ? 1 : -1\n        ),\n      });\n      this.setState({ sortDirection: 0 });\n    }\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <TableContainer component={Paper}>\n        <Form\n          search={this.state.search}\n          handleInputChange={this.handleInputChange}\n        />\n        <Table className={classes.table} aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Image</TableCell>\n              <TableCell align=\"right\" onClick={() => this.sortByName()}>\n                Name\n              </TableCell>\n              <TableCell align=\"right\">Phone Number</TableCell>\n              <TableCell align=\"right\">Email</TableCell>\n              <TableCell align=\"right\">DOB</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {this.state.users\n              .filter(\n                (user) =>\n                  user.name.first\n                    .toLowerCase()\n                    .includes(this.state.search.toLowerCase()) ||\n                  user.name.last\n                    .toLowerCase()\n                    .includes(this.state.search.toLowerCase())\n              )\n              .map((user) => (\n                <TableRow key={user.name}>\n                  <TableCell component=\"th\" scope=\"row\">\n                    <img src={user.picture.thumbnail}></img>\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    {user.name.first} {user.name.last}\n                  </TableCell>\n                  <TableCell align=\"right\">{user.phone}</TableCell>\n                  <TableCell align=\"right\">{user.email}</TableCell>\n                  <TableCell align=\"right\">{user.dob.date}</TableCell>\n                </TableRow>\n              ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    );\n  }\n}\n\nexport default withStyles(styles)(Wrapper);\n","/Users/user/Desktop/Homework/UserDirectory/userdirectory/src/components/NavBar/index.js",["31","32","33"],"import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nfunction Navbar() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.title}>\n            Employee Directory\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\nexport default Navbar;\n","/Users/user/Desktop/Homework/UserDirectory/userdirectory/src/components/SearchForm/index.js",[],{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":3,"column":35,"nodeType":"40","messageId":"41","endLine":3,"endColumn":40},{"ruleId":"38","severity":1,"message":"42","line":3,"column":42,"nodeType":"40","messageId":"41","endLine":3,"endColumn":48},{"ruleId":"43","severity":1,"message":"44","line":98,"column":21,"nodeType":"45","endLine":98,"endColumn":55},{"ruleId":"38","severity":1,"message":"46","line":6,"column":8,"nodeType":"40","messageId":"41","endLine":6,"endColumn":14},{"ruleId":"38","severity":1,"message":"47","line":7,"column":8,"nodeType":"40","messageId":"41","endLine":7,"endColumn":18},{"ruleId":"38","severity":1,"message":"48","line":8,"column":8,"nodeType":"40","messageId":"41","endLine":8,"endColumn":16},"no-native-reassign",["49"],"no-negated-in-lhs",["50"],"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Button' is defined but never used.","'IconButton' is defined but never used.","'MenuIcon' is defined but never used.","no-global-assign","no-unsafe-negation"]